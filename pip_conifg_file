# from pip documentation v21.1.1

Pip configuration file:

Pip allows you to set all command line option defaults in a standard ini style config file. (windows)
(You have to manually create it if it's not exist)

The names and locations of the configuration files vary slightly across platforms. You may have per-user, per-virtualenv or global
(shared amongst all users) configuration:

Per-user:
- on Unix the default configuration file is: $HOME/.config/pip/pip.conf which respects the XDG_CONIFG_HOME environment variable.
- on macOS the configuration file is $HOME/.config/pip.pip.conf if directory $HOME/Library/Application Support/pip exists 
  else $HOME/.config/pip/pip.conf
- on Windows, the configuration is %APPDATA%\pip\pip.ini

There is also per-user configuration file which is also respected. To find its location:
- On Unix and macOS the configuration file is: $HOME/.pip/pip.conf
- On Windows the configuration file is: %HOME%\pip\pip.ini

You can set a custom path location for this config file using the environment variable PIP_CONFIG_FILE. 
Inside a virtualenv:
- On Unix and macOS the file is $VIRTUAL_ENV/pip.conf
- On Windows the file is: %VIRTUAL_ENV%\pip.ini

Global:
- On Unix the file may be located in /etc/pip.conf (maybe you need to create if needed). Alternatively it may be in a "pip" subdirectory
  of any of the paths set in the environment variable XDG_CONFIG_DIRS (if exists), for example /etc/xdg/pip/pip.conf
- On macOS the file is: /Library/Application Support/pip/pip.conf
- On Windows XP the fiel is: C:\Docuemnts and Settings\All Users\Application Data\pip\pip.ini
- On Windoes 7 and later, the file is hidden, but writeable at C:\ProgramData\pip\pip.ini
- Global configuration is not supported on Windows Vista

The global configuration file is shared by all Python Installation:
if multiple configuration files are found by pip then they are combined in the following order:
1. The global file is read
2. The per-user file is read
3. The virtualenv-specific file is read

Each file read overrides any values read from previous files, so if the global timeout is specified  in both global file and the
per-user file then the latter value will be used. 

The names of the settings are derived from the long command line option, e.g. if you want to use a different package index
(--index-url) and set the HTTP timeout(--default-timeout) to 60 seconds your config file would look like this:

[global]
timeout = 60
index-url = https://download.zope.org/ppix

each subcommand can be configured optionally in its own section so that every global setting with the same name will be overidden;
e.g. decreasing the timeout to 10 seconds when running the "freeze" (pip freeze) command and using 60 seconds for all other commands
is possible with:

[global]
timeout = 60

[freeze]
timeout = 10

Boolean options like "--ignore-installed" or "--no-dependencies" can be set like this:
[install]
ignore-installed = true
no-dependencies = yes

To enable the boolean options "--no-compile", "--no-warn-script-location", and "--no-cache-dir", falsy value have to be used:
[global]
no-cache-dir = false

[install]
no-compile = no
no-warn-script-location = false

For options which can be repeated like "--verbose" and "--quiet", a non-negative integer can be used to represent the level 
to be specified:

[global]
quiet = 0
verbose = 2

It is possible to append values to a section within a configuration file such as the pip.ini file. This is applicable to appending
options like "--find-links" or "--trusted-host", which can be written on multiple lines:

[global]
find-links =
    http://download.exmaple.com

[install]
find-links =
    http://mirror1.example.com
    http://mirror2.example.com

trusted-host =
    mirror1.example.com
    mirror2.example.com

This enables users to add additional values in the order fo entry for such command line arguments. 

Environment Variables:
pip's command line options can be set with environment variables using the format 
PIP_<UPPER_LONG_NAME>. Dashes (-) have to be repalced with underscores(_).

For example: set the default timeout:
export PIP_DEFAULT_TIMEOUT=60

For Config Precedence, please refer to https://pip.pypa.io/stable/user_guide/#config-precedence

